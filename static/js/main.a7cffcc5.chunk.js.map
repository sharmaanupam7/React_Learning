{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","homeText","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","backgroundColor","onChange","event","target","newText","toLowerCase","showAlert","toUpperCase","newtext","split","join","document","getElementById","select","navigator","clipboard","writeText","length","Alert","capitalize","word","lower","charAt","slice","alert","alertType","msg","defaultProps","aboutText","search_input","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","searchText","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a7cffcc5.chunk.js","sourcesContent":["/* eslint-disable react/no-typos */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className={`navbar-brand text-${props.mode === 'light' ? 'dark' : 'light'}`} href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className={`nav-link active text-${props.mode === 'light' ? 'dark' : 'light'}`} aria-current=\"page\" href=\"#\">{props.homeText}</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className={`nav-link active text-${props.mode === 'light' ? 'dark' : 'light'}`} aria-current=\"page\" href=\"/about_textUtils\">{props.aboutText}</a>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                    {/* for later use */}\r\n                    {/* <form className=\"d-flex mx-4\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder={props.search_input} aria-label=\"Search\"></input>\r\n                        <button className={`btn btn-outline-warning text-${props.mode === 'light'? 'dark':'light'}`} type=\"button\">{props.searchText}</button>\r\n                    </form> */}\r\n\r\n                    {/* Dark Mode */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked = \"true\" id=\"flexSwitchCheckDefault\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">ENABLE DARK MODE</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    homeText: PropTypes.string,\r\n    aboutText: PropTypes.string,\r\n    searchText: PropTypes.string,\r\n    search_input: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"TextUtils\",\r\n    aboutText: \"About\",\r\n    search_input: \"Input Your Text Here\"\r\n}","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable no-empty-character-class */\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handle_UpClick = (event) => {\r\n        // console.log(\"buttin clicked\" + text );\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UPPER CASE !\", \"success\");\r\n    }\r\n\r\n    const handle_LowClick = ()=> {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LOWER CASE !\", \"success\")\r\n    }\r\n\r\n    const handle_onChange = (event) => {\r\n        // console.log(\"Changed\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const handle_ClearText = () => {\r\n        let newValue = \"\";\r\n        setText(newValue)\r\n        props.showAlert(\"Text got cleared !\", \"success\")\r\n    }\r\n\r\n    const handle_CopyText = () => {\r\n        let text = document.getElementById(\"text-box\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Text got copied to Clipboard !\", \"success\")\r\n    }\r\n\r\n    const handle_ExtraSpace = () => {\r\n        let newtext  = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"Extra Space got removed from Text !\", \"success\")\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style = {{color: props.mode === 'light'? '#041954': 'white'}}>\r\n                <h3 style = {{color: props.mode === 'light'? '#041954': 'white'}}>{props.heading}</h3>\r\n                <div className=\"mb-2\">\r\n                    <textarea className=\"form-control\" id=\"text-box\" rows=\"8\" value={text} style = {{backgroundColor: props.mode === 'light'? '#041954': 'white', color: props.mode === 'light'? 'white':'#041954'}} onChange={handle_onChange}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-outline-warning text btn-sm mx-3 col-2 fw-bold fw-italic\" onClick={handle_LowClick}>Convert to Lower Case</button>\r\n                <button className=\"btn btn-outline-warning text btn-sm mx-4 col-2 fw-bold fw-italic\" onClick={handle_UpClick}>Convert to Upper Case</button>\r\n                <button className=\"btn btn-outline-warning text btn-sm mx-3 col-2 fw-bold fw-italic\" onClick={handle_ExtraSpace}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-outline-warning text btn-sm mx-3 col-2 fw-bold fw-italic\" onClick={handle_CopyText}>Copy Text</button>\r\n                <button className=\"btn btn-outline-warning text btn-sm mx-4 col-2 fw-bold fw-italic\" onClick={handle_ClearText}>Clear Text</button>\r\n                \r\n                \r\n            </div>\r\n\r\n            <div className=\"container my-5\" style = {{color: props.mode === 'light'? '#041954': 'white'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").length - 1} Words {text.length} Characters</p>\r\n                <p>Data read in {0.008 * text.split(\" \").length} Minutes</p>\r\n                <h5>Preview</h5>\r\n                <p>{text.length > 0? text: \"Enter some text in the box above to preview it as a Summary\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// TextForm.prototypes = {\r\n//     text-box_name: PropTypes.string,\r\n// }","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.alertType} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.alertType)}</strong> : { capitalize(props.alert.msg)}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  // eslint-disable-next-line no-unused-vars\n  const [mode, setMode] = useState('light') // check dark mode is enabled or not\n  const [alert, setAlert] = useState(null); // to set alert message\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'blue';\n      showAlert(\"dark\", \"success\");\n      document.title = \"Text Utils > DARK Mode\"\n\n      // setInterval(() => {\n      //   document.title = 'Text Utils is so AMAZING !!!'\n      // }, 2000);\n\n      // setInterval(() =>{\n      //   document.title = 'Current Downloads : 500M'\n      // }, 2200);\n\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light\", \"success\")\n      document.title = \"Text Utils > LIGHT Mode\"\n\n    }\n  }\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      alertType: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar mode={mode} toggleMode={toggleMode} title=\"TextUtils\" homeText=\"Home\" /*</>aboutText=\"About TextUtils\"*/ searchText=\"Search\"></Navbar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path =\"/about_textUtils\" element = {<About title = 'About Us'></About>}></Route> */}\n            {/* <Route exact path =\"/\" element = {<TextForm mode={mode} heading=\"Enter The Text To Analyze Below\" showAlert={showAlert}></TextForm>}></Route> */}\n          {/* </Routes> */}\n          <TextForm mode={mode} heading=\"Enter The Text To Analyze Below\" showAlert={showAlert}></TextForm>\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}